CREATE OR REPLACE TRIGGER TRG_AFT_UPD_USER_PSWD_TEXT
AFTER UPDATE OF PASSWORD ON USERS
FOR EACH ROW
  
when (NEW.USER_TYPE = 'CL')
DECLARE
   -- local variables...
   v_TEXT_id             NUMBER(12);
   v_text                TEXT_ALERTS_TEMPLATE.ALERT_BODY%TYPE;
   v_sys_date            DATE;
   V_PHONE_MOBILE        CLIENT.PHONE_MOBILE%TYPE;
   V_SMS_SERVICE				 CLIENT.SMS_SERVICE%TYPE;
	 v_Active							 TEXT_ALERTS_TEMPLATE.ALERT_ACTIVE%TYPE;
BEGIN
  
  BEGIN
		SELECT ALERT_ACTIVE INTO v_Active	FROM TEXT_ALERTS_TEMPLATE WHERE ALERT_ID = 'UCP';
	EXCEPTION WHEN OTHERS THEN
		V_ACTIVE := 0;
	END;	
	
	IF V_ACTIVE = 0 THEN
		RETURN;
	END IF;
		
  BEGIN
    SELECT c.sms_service, c.phone_mobile INTO V_SMS_SERVICE, V_PHONE_MOBILE FROM client c WHERE c.client_code = :NEW.CLIENT_CODE;
  EXCEPTION
    WHEN OTHERS THEN
      V_PHONE_MOBILE  := '';
  END;

  IF V_SMS_SERVICE <> 0 AND V_PHONE_MOBILE IS NOT NULL THEN
     SELECT T.ALERT_BODY INTO v_text FROM TEXT_ALERTS_TEMPLATE T WHERE T.ALERT_ID = 'UCP';
     v_text := REPLACE(v_text, 'P1', :NEW.USER_ID);

     SELECT TEXT_ALERTS_SEQ.NEXTVAL, s.system_date
       INTO v_TEXT_id, v_sys_date
       FROM SYSTEM s;

     INSERT INTO TEXT_ALERTS_LOG(TEXT_ID, TEXT_SENDER, TEXT_RECIEVER, TEXT_BODY, ALERT_ID, CLIENT_CODE, TIME_INSERT, TEXT_STATUS, LOG_ID, Post)
     VALUES(v_TEXT_id, NULL, V_PHONE_MOBILE, v_text, 'UCP', :NEW.CLIENT_CODE, v_sys_date, 'P', :NEW.LOG_ID, 1);
  END IF;

END TRG_AFT_UPD_USER_PSWD_TEXT;
/
