CREATE OR REPLACE TRIGGER TRG_AFT_IU_CLT_OP_CL_TEXT
AFTER INSERT OR UPDATE OF active ON client
FOR EACH ROW
DECLARE
   -- local variables...
   v_TEXT_id    NUMBER(12);
   v_text       TEXT_ALERTS_TEMPLATE.ALERT_BODY%TYPE;
   v_sys_date   DATE;
   v_Active			TEXT_ALERTS_TEMPLATE.ALERT_ACTIVE%TYPE;
BEGIN

  BEGIN
		SELECT ALERT_ACTIVE INTO V_ACTIVE FROM TEXT_ALERTS_TEMPLATE WHERE ALERT_ID = 'CLTOP';
	EXCEPTION WHEN OTHERS THEN
		V_ACTIVE := 0;
	END;	
	
	IF V_ACTIVE = 1 THEN

	  IF :NEW.PHONE_MOBILE IS NOT NULL THEN
	    IF INSERTING THEN
	       SELECT T.ALERT_BODY INTO v_text FROM TEXT_ALERTS_TEMPLATE T WHERE T.ALERT_ID = 'CLTOP';
	       v_text := REPLACE(v_text, 'P1', :NEW.CLIENT_CODE);
	
	       SELECT TEXT_ALERTS_SEQ.NEXTVAL, s.system_date
	         INTO v_TEXT_id, v_sys_date
	         FROM SYSTEM s;
	
	       INSERT INTO TEXT_ALERTS_LOG(TEXT_ID, TEXT_SENDER, TEXT_RECIEVER, TEXT_BODY, ALERT_ID, CLIENT_CODE, TIME_INSERT, TEXT_STATUS, LOG_ID, Post)
	       VALUES(v_TEXT_id, NULL, :NEW.PHONE_MOBILE, v_text, 'CLTOP', :NEW.CLIENT_CODE, v_sys_date, 'P', :NEW.LOG_ID, 1);
	    END IF;
	
	    IF (UPDATING AND :NEW.ACTIVE = 0) THEN --  IF CLIENT DEACTIVATED...
	       SELECT T.ALERT_BODY INTO v_text FROM TEXT_ALERTS_TEMPLATE T WHERE T.ALERT_ID = 'CLTCL';
	       v_text := REPLACE(v_text, 'P1', :NEW.CLIENT_CODE);
	
	       SELECT TEXT_ALERTS_SEQ.NEXTVAL, s.system_date
	         INTO v_TEXT_id, v_sys_date
	         FROM SYSTEM s;
	
	       INSERT INTO TEXT_ALERTS_LOG(TEXT_ID, TEXT_SENDER, TEXT_RECIEVER, TEXT_BODY, ALERT_ID, CLIENT_CODE, TIME_INSERT, TEXT_STATUS, Log_Id, Post)
	       VALUES(v_TEXT_id, NULL, :NEW.PHONE_MOBILE, v_text, 'CLTCL', :NEW.CLIENT_CODE, v_sys_date, 'P', :NEW.LOG_ID, 1);
	    END IF;
	  END IF;
	END IF;  
END TRG_AFT_IU_CLT_OP_CL_TEXT;
/
